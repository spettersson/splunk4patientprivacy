name: Matching Residential Information
id: b04be6e5-2u72-4349-8742-52111635y8f5
version: 1
author: Simon Pettersson, Splunk
type: Anomaly
status: experimental
description: This search looks for staff members who access patient medical records where there is a potential residential 
        link between the staff member and the patient. A match on residential address, street name, or postal code may 
        indicate a relationship outside of work.
data_source: EHR audit data, Identity data
search: tag=auditevent tag=patientrecord earliest=-12min@min latest=-2min@min
        | fields _time, user_id, patient_id, careprovider_id
        | stats count by user_id, patient_id, careprovider_id
        | lookup patientpii_lookup patient_id OUTPUT patient_residential_street_name, patient_residential_street_number, patient_residential_postal_code
        | lookup staffpii_lookup user_id OUTPUT staff_residential_street_name, staff_residential_street_number, staff_residential_postal_code
        | eval staff_residential_address_and_postal_code = staff_residential_street_name + staff_residential_street_number + staff_postal_code
        | eval patient_residential_address_and_postal_code = patient_residential_street_name + patient_residential_street_number + patient_postal_code
        | eval patient_residential_street_name_and_postal_code = patient_residential_street_name + patient_postal_code
        | eval staff_residential_street_name_and_postal_code = staff_residential_street_name + staff_postal_code
        | eval matching_address = if(staff_residential_address_and_postal_code == patient_residential_address_and_postal_code, "true", "false")
        | eval matching_street_name = if(staff_residential_street_name_and_postal_code  == patient_residential_street_name_and_postal_code , "true", "false")
        | eval matching_postal_code = if(staff_residential_postal_code == patient_residential_postal_code, "true", "false")
        | where matching_address="true" OR matching_street_name="true" OR matching_postal_code="true"
        | eval observation_risk_factor = case(
        matching_address == "true", 10, 
        matching_street_name == "true", 3,
        matching_postal_code == "true", 1
        )			
        | eval observation_risk_score = observation_risk_factor * observation_risk_score
        | fields user_*, patient_*, matching_*, detection_*, observation_*, careprovider_id
scheduling:
  cron_schedule: '*/10 * * * *'
  earliest_time: -12min@min
  latest_time: -2min@min
how_to_implement: This search requires you to ingest EHR audit data that has the tags auditevent and patientrecord. 
          The data must have the fields user_id, patient_id, and care_provider_id, as well. 
drilldown_searches:
- name: View the detection results
  search: '%original_detection_search% | search  user = "$user$" dest = "$dest$"'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
rba:
  message:  
  risk_objects:
  - field: user_id
    type: user
    score: 10
  - field: patient_id
    type: patient
    score: 10
