name: risk threshold exceeded
type: alert-triggering
description: 
detection_ID: alt1
prerequisites: 
- indexes: 
          anomaly_collection (explanation: an index where triggered anomalies are stored as individual events)
          alert_collection (explanation: an index where triggered alerts are stored as individual events)
- lookups: 
- macros: 
- fields: 
          staff_ID 
          patient_ID
          risk_score
          use_case_ID
          anomaly_ID
- searches: 
          search 1
how_to_implement:
          1. create an index called 'anomaly_collection' and 'incident_collection'. 
          5. create 'search 1' as a report and then schedule it according to the instructions. 
search 1: 
- description: 
- search: 
          index=anomaly_collection earliest=-24h
          | stats sum(risk_score) as risk_score dc(use_case_ID) as distinct_anomalies count as total_anomalies values(anomaly_ID) as anomaly_ID values(patient_ID) as patient_ID by staff_ID
          | eval anomaly_ID = mvjoin(anomaly_ID,",")
          | eval patient_ID = mvjoin(patient_ID,",")
          | eval use_case_ID = "alt1"
          | eval incident_title = ""
          | eval incident_description = ""
          | addinfo
          | eval incident_ID = md5(incident_description.info_search_time)
          | fields incident_ID, incident_title, incident_description, staff_ID, patient_ID, distinct_anomalies, total_anomalies, anomaly_ID, info_search_time, info_min_time, info_max_time
          | collect index=alert_collection addinfo=false
- time range picker: 
- cron schedule: 
