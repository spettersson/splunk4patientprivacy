name: mismatch between care unit and work unit
type: anomaly-triggering
description: 
        This detection looks for employees accessing patient medical records associated with a care unit 
        that does not match their assigned work unit. This mismatch may indicate access outside of the employeeâ€™s 
        clinical responsibility or team.
detection_ID: at4
prerequisites: 
- data sources:
        1. Audit Logs from any Electronic Medical Record (EMR) system that records staff access to patient medical records.
- indexes: 
        anomaly_collection
- lookups: 
        N/A
- macros: 
        N/A
- fields: 
        staff_ID
        work_unit_ID
          
        patient_ID
        care_unit_ID
- tags: 
        emraudit
- searches: 
        search_1
        
how_to_implement:
search_1: 
- description: 
- search: 
        tag=emraudit staff_ID=* patient_ID=* earliest=-12min@min latest=-2min@min
        | fields _time, staff_ID, patient_ID
        | stats count by staff_ID, patient_ID
        | lookup patientpii_lookup patient_ID OUTPUT patient_residential_street_name, patient_residential_street_number, patient_residential_postal_code
        | lookup staffpii_lookup staff_ID OUTPUT staff_residential_street_name, staff_residential_street_number, staff_residential_postal_code
        | eval staff_residential_address_and_postal_code = staff_residential_street_name + staff_residential_street_number + staff_postal_code
        | eval patient_residential_address_and_postal_code = patient_residential_street_name + patient_residential_street_number + patient_postal_code
        | eval patient_residential_street_name_and_postal_code = patient_residential_street_name + patient_postal_code
        | eval staff_residential_street_name_and_postal_code = staff_residential_street_name + staff_postal_code
        | eval matching_address = if(staff_residential_address_and_postal_code == patient_residential_address_and_postal_code, "true", "false")
        | eval matching_street_name = if(staff_residential_street_name_and_postal_code  == patient_residential_street_name_and_postal_code , "true", "false")
        | eval matching_postal_code = if(staff_residential_postal_code == patient_residential_postal_code, "true", "false")
        | where matching_address="true" OR matching_street_name="true" OR matching_postal_code="true"
        | eval anomaly_risk_factor = case(
            matching_address == "true", 10, 
            matching_street_name == "true", 3,
            matching_postal_code == "true", 1
        )			
        | addinfo
        | eval detection_ID = "at3"
        | eval detection_title = "matching residential information"
        | eval detection_description = "looks for employees who access patient medical records where there is a potential residential link between the staff member and the patient. A match on residential address, street name, or postal code may indicate a personal relationship."
        | eval anomaly_ID = md5(staff_ID.patient_ID.sid.info_search_time)
        | eval anomaly_message = "staff_ID=".staff_ID." accessed a patient medical record associated to patient_ID=".patient_ID." during hour ".hourOfDay." This is unusual for the employee during this hour of the day."
        | eval anomaly_risk_score = 10
        | eval anomaly_risk_score = anomaly_risk_factor * anomaly_risk_score
        | fields staff_*, patient_*, matching_*, detection_*, anomaly_*
        | collect index=anomaly_collection add_info=false
- time range picker: N/A (the time window for the search is defined in the search itself via the earliest and latest options)
- cron schedule: */10 * * * * (run once every 10th minute, every hour, every day of the week)
