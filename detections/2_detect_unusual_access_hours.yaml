name: Unusual Access Hours
id: b04be6e5-2002-4349-8742-52111635y8f5
version: 1
author: Simon Pettersson, Splunk
type: Anomaly
status: experimental
description: This search runs continuously to detect accesses to patient records during hours that are unusual for the staff 
          member, based on the baseline built by search_1. If an access occurs at a rare or previously unseen hour 
          (percent â‰¤ 1 or null), an observation is created and stored as an event in index=risk.
data_source:
search: tag=auditevent tag=patientrecord earliest=-12min@min latest=-2min@min
          | fields _time, user_id, patient_id, care_provider_id
          | eval hourOfDay = strftime(_time, "%H")
          | stats count by hourOfDay, user_id, patient_id, care_provider_id
          | lookup baseline_access_hours user_id hourOfDay OUTPUT percent AS historical_percent
          | where isnull(historical_percent) OR historical_percent<=1
          | eval detection_title = "Unusual Access Hours"
          | eval detection_description = "Looks for staff members members accessing patient medical records during unusual hours of the day, based on their own historical access patterns."
          | eval observation_message = "User=".user_id." accessed a patient medical record associated to patient=".patient_id." during hour ".hourOfDay." This is unusual for the staff member during this hour of the day."
          | eval observation_risk_score = 10
          | fields user_id, patient_id, care_provider_id, hourOfDay, detection_*, observation_*, info_*
how_to_implement: This search requires you to ingest EHR audit data that has the tags auditevent and patientrecord. 
          The data must have the fields user_id, patient_id, and care_provider_id, as well. Moreover, in order for the search
          to work, the lookup file baseline_access_hours needs to be populated which is done via 2_baseline_unusual_access_hours.
drilldown_searches:
- name: View the detection results
  search: '%original_detection_search% | search  user = "$user$" dest = "$dest$"'
  earliest_offset: $info_min_time$
  latest_offset: $info_max_time$
rba:
  message: User=$user_id$ has accessed a patient medical record during hourOfDay=$hourOfDay$, which is rare for this specific user.
  risk_objects:
  - field: user_id
    type: user
    score: 80
  - field: patient_id
    type: patient
    score: 80
