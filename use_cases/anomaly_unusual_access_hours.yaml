name: unusual access hours
type: anomaly-triggering
description: looks for employees accessing patient medical records during unusual hours of the day, based on their own historical behavior. Access is considered unusual if it occurs during an hour that is rare or not previously observed for the individual staff member. For each match, an anomaly is triggered.
detection_ID: at02
prerequisites: 
- indexes: 
          anomaly_collection
- lookups: 
          baseline_access_hours
- macros: 
- fields: 
          staff_ID
          patient_ID
- searches: 
          search 1
          search 2
how_to_implement:

search 1: 
- description: 
- search: 
 tag=emraudit staff_ID=* patient_ID=* earliest=-30d
 | fields _time, staff_ID
 | eval hourOfDay = strptime(_time, "%H")
 | rare hourOfDay by staff_ID
 | fields staff_ID, hourOfDay, percent
 | outputlookup baseline_access_hours
 
- time range picker: N/A (the time window is set to the last 30 days via earliest=-30d in the search)
- cron schedule: * * * * *

search 2: 
- description: 
- search: 
 tag=emraudit staff_ID=* patient_ID=* earliest=-12min@min latest=-2min@min
 | fields _time, staff_ID, patient_ID
 | eval hourOfDay = strptime(_time, "%H")
 | stats count by hourOfDay, staff_ID, patient_ID
 | lookup baseline_access_hours staff_ID hourOfDay OUTPUT percent AS historical_percent
 | where isnull(historical_percent) OR historical_percent<=1
 | eval detection_ID = "at02"
 | eval detection_title = "unusual access hours"
 | eval detection_description = "looks for employees accessing patient medical records during unusual hours of the day, based on their own historical behavior"
 | eval anomaly_ID = ""
 | eval anomaly_message = ""
 | fields staff_ID, patient_ID, detection_*, anomaly_*
 
- time range picker: 
- cron schedule: 
